<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ko1265.github.io</id>
    <title>UnitTest</title>
    <updated>2022-05-17T00:59:16.001Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ko1265.github.io"/>
    <link rel="self" href="https://ko1265.github.io/atom.xml"/>
    <subtitle>Talk is cheap, show...</subtitle>
    <logo>https://ko1265.github.io/images/avatar.png</logo>
    <icon>https://ko1265.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, UnitTest</rights>
    <entry>
        <title type="html"><![CDATA[js树数组遍历]]></title>
        <id>https://ko1265.github.io/post/js-shu-shu-zu-bian-li/</id>
        <link href="https://ko1265.github.io/post/js-shu-shu-zu-bian-li/">
        </link>
        <updated>2022-05-17T00:51:55.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-javascript">treeTraverse(arrayTree, value) {
    let res = ''
    for(let item of arrayTree) {
        if(item.orgCode == value) {
            // 要做的事的逻辑代码
            break
        } else {
            if(item.children&amp;&amp;item.children.length&gt;0) {
                let node = this.treeTraverse(item.children, value)
                if(node) {
                    return node //(1)
                }
            }
        }
    }
    return res
}
</code></pre>
<p>(1)递归调用函数时返回的object通过打印有值，但是在获取的时候是undefined，原因是在递归函数内部没有对递归函数进行return，否则外层函数无法接收到返回值</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[antdv项目中插槽slot和scopedSlots使用例子]]></title>
        <id>https://ko1265.github.io/post/antdv-xiang-mu-zhong-cha-cao-slot-he-scopedslots-shi-yong-li-zi/</id>
        <link href="https://ko1265.github.io/post/antdv-xiang-mu-zhong-cha-cao-slot-he-scopedslots-shi-yong-li-zi/">
        </link>
        <updated>2021-05-18T06:46:56.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-html">&lt;a-transfer
            :dataSource=&quot;deviceList&quot;
            show-search
            :titles=&quot;['设备列表','已选择']&quot;
            :list-style=&quot;{
              width: '300px',
              height: '600px',
            }&quot;
            :target-keys=&quot;targetKeys&quot;
            :render=&quot;deviceTransferItemRender&quot;
            @change=&quot;handleDeviceTransChange&quot;
          &gt;
            &lt;template
                slot=&quot;children&quot;
                slot-scope=&quot;{
                  props: { direction, filteredItems, selectedKeys, disabled: listDisabled },
                  on: { itemSelectAll, itemSelect },
                }&quot;
            &gt;
                &lt;a-table
                    :row-selection=&quot;getRowSelection({ disabled: listDisabled, selectedKeys, itemSelectAll, itemSelect })&quot;
                    :columns=&quot;direction === 'left' ? leftColumns : rightColumns&quot;
                    :data-source=&quot;filteredItems&quot;
                    size=&quot;small&quot;
                    :style=&quot;{ pointerEvents: listDisabled ? 'none' : null }&quot;
                    :custom-row=&quot;
                        ({ key, disabled: itemDisabled }) =&gt; ({
                            on: {
                                click: () =&gt; {
                                    if (itemDisabled || listDisabled) return;
                                    itemSelect(key, !selectedKeys.includes(key));
                                },
                            },
                        })
                    &quot;
                &gt;
                    &lt;span slot=&quot;numAndNote&quot; slot-scope=&quot;text, record&quot;&gt;
                        &lt;a-popover title=&quot;设备说明&quot; placement=&quot;left&quot;&gt;
                            &lt;template slot=&quot;content&quot;&gt;
                                &lt;p&gt;{{record.note}}&lt;/p&gt;
                            &lt;/template&gt;
                            {{ text }}
                        &lt;/a-popover&gt;
                    &lt;/span&gt;
                &lt;/a-table&gt;
            &lt;/template&gt;
          &lt;/a-transfer&gt;
</code></pre>
<pre><code class="language-javascript">const leftTableColumns = [
  {
    dataIndex: 'deviceSerialNumber',
    key: 'numAndNote',
    scopedSlots: { customRender:'numAndNote' }
  },
];
const rightTableColumns = [
  {
    dataIndex: 'deviceSerialNumber',
    key: 'numAndNote',
    scopedSlots: { customRender:'numAndNote' }
  },
];
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Idea远程调试spring boot项目]]></title>
        <id>https://ko1265.github.io/post/idea-remote-debug/</id>
        <link href="https://ko1265.github.io/post/idea-remote-debug/">
        </link>
        <updated>2021-01-28T06:57:14.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-idea配置">1. idea配置</h2>
<p>配置Run/Debug Configurations，选择Remote JVM Debug；Host填写远程ip，Port填写端口；<img src="https://ko1265.github.io/post-images/1611817559563.png" alt="" loading="lazy"></p>
<h2 id="2-在远端加一个shell命令文件">2. 在远端加一个shell命令文件</h2>
<p>debug.sh里写:<br>
<code>java -Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=y -jar 包名.jar</code></p>
<h2 id="3-开始调试">3. 开始调试</h2>
<p>一、远端运行debug.sh；<br>
二、idea点调试；<img src="https://ko1265.github.io/post-images/1611817852579.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Amigo]]></title>
        <id>https://ko1265.github.io/post/hello/</id>
        <link href="https://ko1265.github.io/post/hello/">
        </link>
        <updated>2021-01-25T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>hello android；<br>
hello node.js；<br>
hello ios；</p>
]]></content>
    </entry>
</feed>